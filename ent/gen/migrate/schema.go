// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CartsColumns holds the columns for the "carts" table.
	CartsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_carts", Type: field.TypeUint64, Nullable: true},
	}
	// CartsTable holds the schema information for the "carts" table.
	CartsTable = &schema.Table{
		Name:       "carts",
		Columns:    CartsColumns,
		PrimaryKey: []*schema.Column{CartsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "carts_users_carts",
				Columns:    []*schema.Column{CartsColumns[3]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CartItemsColumns holds the columns for the "cart_items" table.
	CartItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "cart_items", Type: field.TypeUint64, Nullable: true},
		{Name: "product_cart_items", Type: field.TypeUint64, Nullable: true},
	}
	// CartItemsTable holds the schema information for the "cart_items" table.
	CartItemsTable = &schema.Table{
		Name:       "cart_items",
		Columns:    CartItemsColumns,
		PrimaryKey: []*schema.Column{CartItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "cart_items_carts_items",
				Columns:    []*schema.Column{CartItemsColumns[2]},
				RefColumns: []*schema.Column{CartsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "cart_items_products_cart_items",
				Columns:    []*schema.Column{CartItemsColumns[3]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// CategoriesColumns holds the columns for the "categories" table.
	CategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 100},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 150},
		{Name: "parent_id", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// CategoriesTable holds the schema information for the "categories" table.
	CategoriesTable = &schema.Table{
		Name:       "categories",
		Columns:    CategoriesColumns,
		PrimaryKey: []*schema.Column{CategoriesColumns[0]},
	}
	// DiscountsColumns holds the columns for the "discounts" table.
	DiscountsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "code", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "discount_type", Type: field.TypeString},
		{Name: "discount_value", Type: field.TypeFloat64},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "usage_limit", Type: field.TypeInt, Nullable: true},
		{Name: "usage_count", Type: field.TypeInt, Default: 0},
		{Name: "min_order_value", Type: field.TypeInt, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// DiscountsTable holds the schema information for the "discounts" table.
	DiscountsTable = &schema.Table{
		Name:       "discounts",
		Columns:    DiscountsColumns,
		PrimaryKey: []*schema.Column{DiscountsColumns[0]},
	}
	// DiscountCategoriesColumns holds the columns for the "discount_categories" table.
	DiscountCategoriesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "category_discounts", Type: field.TypeUint64, Nullable: true},
		{Name: "discount_categories", Type: field.TypeUint64, Nullable: true},
	}
	// DiscountCategoriesTable holds the schema information for the "discount_categories" table.
	DiscountCategoriesTable = &schema.Table{
		Name:       "discount_categories",
		Columns:    DiscountCategoriesColumns,
		PrimaryKey: []*schema.Column{DiscountCategoriesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "discount_categories_categories_discounts",
				Columns:    []*schema.Column{DiscountCategoriesColumns[1]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "discount_categories_discounts_categories",
				Columns:    []*schema.Column{DiscountCategoriesColumns[2]},
				RefColumns: []*schema.Column{DiscountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// DiscountProductsColumns holds the columns for the "discount_products" table.
	DiscountProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "discount_products", Type: field.TypeUint64, Nullable: true},
		{Name: "product_discounts", Type: field.TypeUint64, Nullable: true},
	}
	// DiscountProductsTable holds the schema information for the "discount_products" table.
	DiscountProductsTable = &schema.Table{
		Name:       "discount_products",
		Columns:    DiscountProductsColumns,
		PrimaryKey: []*schema.Column{DiscountProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "discount_products_discounts_products",
				Columns:    []*schema.Column{DiscountProductsColumns[1]},
				RefColumns: []*schema.Column{DiscountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "discount_products_products_discounts",
				Columns:    []*schema.Column{DiscountProductsColumns[2]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrdersColumns holds the columns for the "orders" table.
	OrdersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "total_price", Type: field.TypeFloat64, Default: 0},
		{Name: "payment_method", Type: field.TypeString, Nullable: true},
		{Name: "shipping_address", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "user_orders", Type: field.TypeUint64, Nullable: true},
	}
	// OrdersTable holds the schema information for the "orders" table.
	OrdersTable = &schema.Table{
		Name:       "orders",
		Columns:    OrdersColumns,
		PrimaryKey: []*schema.Column{OrdersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "orders_users_orders",
				Columns:    []*schema.Column{OrdersColumns[7]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// OrderItemsColumns holds the columns for the "order_items" table.
	OrderItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "quantity", Type: field.TypeInt},
		{Name: "unit_price", Type: field.TypeFloat64},
		{Name: "order_items", Type: field.TypeUint64, Nullable: true},
		{Name: "product_order_items", Type: field.TypeUint64, Nullable: true},
	}
	// OrderItemsTable holds the schema information for the "order_items" table.
	OrderItemsTable = &schema.Table{
		Name:       "order_items",
		Columns:    OrderItemsColumns,
		PrimaryKey: []*schema.Column{OrderItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "order_items_orders_items",
				Columns:    []*schema.Column{OrderItemsColumns[3]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "order_items_products_order_items",
				Columns:    []*schema.Column{OrderItemsColumns[4]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "method", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeString, Default: "pending"},
		{Name: "transaction_id", Type: field.TypeString, Nullable: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "order_payments", Type: field.TypeUint64, Nullable: true},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "payments_orders_payments",
				Columns:    []*schema.Column{PaymentsColumns[6]},
				RefColumns: []*schema.Column{OrdersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// PermissionsColumns holds the columns for the "permissions" table.
	PermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "resource", Type: field.TypeString, Size: 255},
		{Name: "action", Type: field.TypeString, Size: 255},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// PermissionsTable holds the schema information for the "permissions" table.
	PermissionsTable = &schema.Table{
		Name:       "permissions",
		Columns:    PermissionsColumns,
		PrimaryKey: []*schema.Column{PermissionsColumns[0]},
	}
	// ProductsColumns holds the columns for the "products" table.
	ProductsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Size: 200},
		{Name: "slug", Type: field.TypeString, Unique: true, Size: 200},
		{Name: "description", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "stock_quantity", Type: field.TypeInt, Default: 0},
		{Name: "avg_rating", Type: field.TypeFloat64, Default: 0},
		{Name: "review_count", Type: field.TypeInt, Default: 0},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "category_products", Type: field.TypeUint64, Nullable: true},
	}
	// ProductsTable holds the schema information for the "products" table.
	ProductsTable = &schema.Table{
		Name:       "products",
		Columns:    ProductsColumns,
		PrimaryKey: []*schema.Column{ProductsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "products_categories_products",
				Columns:    []*schema.Column{ProductsColumns[10]},
				RefColumns: []*schema.Column{CategoriesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ProductImagesColumns holds the columns for the "product_images" table.
	ProductImagesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "image_url", Type: field.TypeString},
		{Name: "is_primary", Type: field.TypeBool, Default: false},
		{Name: "product_images", Type: field.TypeUint64, Nullable: true},
	}
	// ProductImagesTable holds the schema information for the "product_images" table.
	ProductImagesTable = &schema.Table{
		Name:       "product_images",
		Columns:    ProductImagesColumns,
		PrimaryKey: []*schema.Column{ProductImagesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "product_images_products_images",
				Columns:    []*schema.Column{ProductImagesColumns[3]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// ReviewsColumns holds the columns for the "reviews" table.
	ReviewsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "rating", Type: field.TypeInt},
		{Name: "comment", Type: field.TypeString, Nullable: true, Size: 2147483647},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "product_reviews", Type: field.TypeUint64, Nullable: true},
		{Name: "user_reviews", Type: field.TypeUint64, Nullable: true},
	}
	// ReviewsTable holds the schema information for the "reviews" table.
	ReviewsTable = &schema.Table{
		Name:       "reviews",
		Columns:    ReviewsColumns,
		PrimaryKey: []*schema.Column{ReviewsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "reviews_products_reviews",
				Columns:    []*schema.Column{ReviewsColumns[5]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "reviews_users_reviews",
				Columns:    []*schema.Column{ReviewsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// RolesColumns holds the columns for the "roles" table.
	RolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "name", Type: field.TypeString, Unique: true},
		{Name: "description", Type: field.TypeString, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
	}
	// RolesTable holds the schema information for the "roles" table.
	RolesTable = &schema.Table{
		Name:       "roles",
		Columns:    RolesColumns,
		PrimaryKey: []*schema.Column{RolesColumns[0]},
	}
	// RolePermissionsColumns holds the columns for the "role_permissions" table.
	RolePermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "permission_id", Type: field.TypeUint64},
		{Name: "role_id", Type: field.TypeUint64},
	}
	// RolePermissionsTable holds the schema information for the "role_permissions" table.
	RolePermissionsTable = &schema.Table{
		Name:       "role_permissions",
		Columns:    RolePermissionsColumns,
		PrimaryKey: []*schema.Column{RolePermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "role_permissions_permissions_roles",
				Columns:    []*schema.Column{RolePermissionsColumns[2]},
				RefColumns: []*schema.Column{PermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "role_permissions_roles_permissions",
				Columns:    []*schema.Column{RolePermissionsColumns[3]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "rolepermission_role_id_permission_id",
				Unique:  true,
				Columns: []*schema.Column{RolePermissionsColumns[3], RolePermissionsColumns[2]},
			},
		},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "token", Type: field.TypeString},
		{Name: "user_id", Type: field.TypeUint64, Nullable: true},
		{Name: "data", Type: field.TypeBytes},
		{Name: "expiry", Type: field.TypeTime},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "first_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "middle_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "last_name", Type: field.TypeString, Nullable: true, Size: 255},
		{Name: "email", Type: field.TypeString, Unique: true, Size: 255},
		{Name: "password_hash", Type: field.TypeString, Size: 255},
		{Name: "phone", Type: field.TypeString, Nullable: true, Size: 20},
		{Name: "status", Type: field.TypeString, Size: 50, Default: "active"},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "verified_at", Type: field.TypeTime, Nullable: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// UserPermissionsColumns holds the columns for the "user_permissions" table.
	UserPermissionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "granted_by", Type: field.TypeUint64},
		{Name: "granted_at", Type: field.TypeTime},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "permission_id", Type: field.TypeUint64},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// UserPermissionsTable holds the schema information for the "user_permissions" table.
	UserPermissionsTable = &schema.Table{
		Name:       "user_permissions",
		Columns:    UserPermissionsColumns,
		PrimaryKey: []*schema.Column{UserPermissionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_permissions_permissions_user_permissions",
				Columns:    []*schema.Column{UserPermissionsColumns[5]},
				RefColumns: []*schema.Column{PermissionsColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_permissions_users_permissions",
				Columns:    []*schema.Column{UserPermissionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userpermission_user_id_permission_id",
				Unique:  true,
				Columns: []*schema.Column{UserPermissionsColumns[6], UserPermissionsColumns[5]},
			},
		},
	}
	// UserRolesColumns holds the columns for the "user_roles" table.
	UserRolesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "assigned_by", Type: field.TypeUint64},
		{Name: "assigned_at", Type: field.TypeTime},
		{Name: "expires_at", Type: field.TypeTime, Nullable: true},
		{Name: "is_active", Type: field.TypeBool, Default: true},
		{Name: "role_id", Type: field.TypeUint64},
		{Name: "user_id", Type: field.TypeUint64},
	}
	// UserRolesTable holds the schema information for the "user_roles" table.
	UserRolesTable = &schema.Table{
		Name:       "user_roles",
		Columns:    UserRolesColumns,
		PrimaryKey: []*schema.Column{UserRolesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_roles_roles_user_roles",
				Columns:    []*schema.Column{UserRolesColumns[5]},
				RefColumns: []*schema.Column{RolesColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "user_roles_users_roles",
				Columns:    []*schema.Column{UserRolesColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "userrole_user_id_role_id",
				Unique:  true,
				Columns: []*schema.Column{UserRolesColumns[6], UserRolesColumns[5]},
			},
		},
	}
	// UserVouchersColumns holds the columns for the "user_vouchers" table.
	UserVouchersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "is_used", Type: field.TypeBool, Default: false},
		{Name: "used_at", Type: field.TypeTime, Nullable: true},
		{Name: "discount_user_vouchers", Type: field.TypeUint64, Nullable: true},
		{Name: "user_vouchers", Type: field.TypeUint64, Nullable: true},
	}
	// UserVouchersTable holds the schema information for the "user_vouchers" table.
	UserVouchersTable = &schema.Table{
		Name:       "user_vouchers",
		Columns:    UserVouchersColumns,
		PrimaryKey: []*schema.Column{UserVouchersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_vouchers_discounts_user_vouchers",
				Columns:    []*schema.Column{UserVouchersColumns[3]},
				RefColumns: []*schema.Column{DiscountsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "user_vouchers_users_vouchers",
				Columns:    []*schema.Column{UserVouchersColumns[4]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WishlistsColumns holds the columns for the "wishlists" table.
	WishlistsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUint64, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "user_wishlists", Type: field.TypeUint64, Nullable: true},
	}
	// WishlistsTable holds the schema information for the "wishlists" table.
	WishlistsTable = &schema.Table{
		Name:       "wishlists",
		Columns:    WishlistsColumns,
		PrimaryKey: []*schema.Column{WishlistsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "wishlists_users_wishlists",
				Columns:    []*schema.Column{WishlistsColumns[2]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// WishlistItemsColumns holds the columns for the "wishlist_items" table.
	WishlistItemsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "added_at", Type: field.TypeTime},
		{Name: "product_wishlist_items", Type: field.TypeUint64, Nullable: true},
		{Name: "wishlist_items", Type: field.TypeUint64, Nullable: true},
	}
	// WishlistItemsTable holds the schema information for the "wishlist_items" table.
	WishlistItemsTable = &schema.Table{
		Name:       "wishlist_items",
		Columns:    WishlistItemsColumns,
		PrimaryKey: []*schema.Column{WishlistItemsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "wishlist_items_products_wishlist_items",
				Columns:    []*schema.Column{WishlistItemsColumns[2]},
				RefColumns: []*schema.Column{ProductsColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "wishlist_items_wishlists_items",
				Columns:    []*schema.Column{WishlistItemsColumns[3]},
				RefColumns: []*schema.Column{WishlistsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CartsTable,
		CartItemsTable,
		CategoriesTable,
		DiscountsTable,
		DiscountCategoriesTable,
		DiscountProductsTable,
		OrdersTable,
		OrderItemsTable,
		PaymentsTable,
		PermissionsTable,
		ProductsTable,
		ProductImagesTable,
		ReviewsTable,
		RolesTable,
		RolePermissionsTable,
		SessionsTable,
		UsersTable,
		UserPermissionsTable,
		UserRolesTable,
		UserVouchersTable,
		WishlistsTable,
		WishlistItemsTable,
	}
)

func init() {
	CartsTable.ForeignKeys[0].RefTable = UsersTable
	CartItemsTable.ForeignKeys[0].RefTable = CartsTable
	CartItemsTable.ForeignKeys[1].RefTable = ProductsTable
	DiscountCategoriesTable.ForeignKeys[0].RefTable = CategoriesTable
	DiscountCategoriesTable.ForeignKeys[1].RefTable = DiscountsTable
	DiscountProductsTable.ForeignKeys[0].RefTable = DiscountsTable
	DiscountProductsTable.ForeignKeys[1].RefTable = ProductsTable
	OrdersTable.ForeignKeys[0].RefTable = UsersTable
	OrderItemsTable.ForeignKeys[0].RefTable = OrdersTable
	OrderItemsTable.ForeignKeys[1].RefTable = ProductsTable
	PaymentsTable.ForeignKeys[0].RefTable = OrdersTable
	ProductsTable.ForeignKeys[0].RefTable = CategoriesTable
	ProductImagesTable.ForeignKeys[0].RefTable = ProductsTable
	ReviewsTable.ForeignKeys[0].RefTable = ProductsTable
	ReviewsTable.ForeignKeys[1].RefTable = UsersTable
	RolePermissionsTable.ForeignKeys[0].RefTable = PermissionsTable
	RolePermissionsTable.ForeignKeys[1].RefTable = RolesTable
	UserPermissionsTable.ForeignKeys[0].RefTable = PermissionsTable
	UserPermissionsTable.ForeignKeys[1].RefTable = UsersTable
	UserRolesTable.ForeignKeys[0].RefTable = RolesTable
	UserRolesTable.ForeignKeys[1].RefTable = UsersTable
	UserVouchersTable.ForeignKeys[0].RefTable = DiscountsTable
	UserVouchersTable.ForeignKeys[1].RefTable = UsersTable
	WishlistsTable.ForeignKeys[0].RefTable = UsersTable
	WishlistItemsTable.ForeignKeys[0].RefTable = ProductsTable
	WishlistItemsTable.ForeignKeys[1].RefTable = WishlistsTable
}
